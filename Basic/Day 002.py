# A의 근무 시간이 180분이고, 들어온 주문에 걸리는 시간이 주문이 들어온 순으로 각각 45, 30, 55, 20, 80, 20분이라고 합니다.
# 이 경우, 단 4개의 주문이 처리될 수 있습니다. 처음 4개의 주문이 완료되는 데 걸리는 시간은 150분으로 근무 시간 내에 처리할 수 있지만, 5번째 주문까지 완료하려면 230분이 걸리기에 처리할 수 없습니다.
# 오늘 들어온 주문이 주어졌을 때, A가 몇 개의 주문을 처리할 수 있는지 계산하는 프로그램을 작성하세요.

# [입력]
# 첫 번째 줄에는 들어온 주문의 수를 나타내는 정수 N과 도도새의 근무 시간(분 단위) T를 입력합니다.
# (1 ≤ N ≤ 50, 1 ≤ T ≤ 500)
# (1≤N≤50, 1≤T≤500)
# 두 번째 줄은 N개의 100 이하인 자연수를 입력하며, 각 주문을 처리하는 데 걸리는 시간을 주문 순서대로 입력합니다.

# [출력]
# 주문 순서대로 요리했을 때, 근무 시간 내에 처리할 수 있는 주문의 개수를 출력합니다.


# --------------------------------------------


orders, w_time = map(int, input().split())

o_time = list(map(int, input().split()))
a = 0
for i in range(orders):
    a += o_time[i]
    if a > w_time:
        break
if i+1 == orders:
    print(i + 1)
else:
    print(i)
